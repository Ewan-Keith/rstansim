% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exposedFunctions.R
\name{stan_sim}
\alias{stan_sim}
\title{Fits a stan model to multiple datasets and returns estimated values}
\usage{
stan_sim(stan_args = list(), sim_data = NULL, calc_loo = FALSE,
  use_cores = 1L, parameters = ".*", estimates = c("2.5\%", "50\%",
  "97.5\%", "n_eff", "Rhat"), stan_warnings = "catch", cache = TRUE,
  stansim_seed = floor(runif(1, 1, 1e+05)), sim_name = paste0("Stansim_",
  start_time))
}
\arguments{
\item{stan_args}{A list of function arguments to be used by
the internal \code{stan()} function when fitting the models.
If not specified then the \code{stan()} function defaults are used.}

\item{sim_data}{A list of strings pointing to the location of
.rds files containing the simulation data. See the vignette on
producing simulation data for details on the formatting of these datasets.}

\item{calc_loo}{If \code{TRUE} then model fit statsics will be
calculated using the \code{loo} package. If \code{TRUE} there must be
a valid log_lik quantity specified in the generated quantities
section of the provided stan model.}

\item{use_cores}{Number of cores to use when running in parallel.
Each stan model is fitted serially regardless of the number of chains
ran as parallelisation across models is more flexible than within.}

\item{parameters}{A set of characters indicating which parameters
should have estimates returned and stored from the fitted models.
Regular expressions are used to extract parameters, so care has
to be taken with similarly named parameters (e.g. 'eta' and 'theta').
This simplifies specification of multi-dimensional parameters.}

\item{estimates}{The estimates to be calculated and returned for each
model parameter. Currently only supports the standard 'summary'
parameters c('mean', 'se_mean',  'sd', '2.5%', '25%',  '50%',
'75%', '97.5%', 'n_eff', 'Rhat').}

\item{stan_warnings}{How warnings returned by individual \code{stan()}
instances should be handled. \code{"catch"} records all warnings in the
returned object alongside other instance level data, \code{"print"} simply
prints warnings to the console as the models are fit (default \code{stan()}
behaviour), and \code{"suppress"} suppressess all warnings without
recording them.}

\item{cache}{If \code{TRUE} then the results for each instance are
written to a local, temporary file so that data is not lost should the
function not terminate properly. This temporary data is removed upon the
model terminating as expected. if \code{FALSE} no data is written and
results are only returned upon the correct termination of the whole
function. The default value of \code{TRUE} is recommended unless there
are relevant write-permission restrictions.}

\item{stansim_seed}{Set a seed for the \code{stan_sim} function.}

\item{sim_name}{A name attached to the \code{stansim} object to help
identify it. It is strongly recomended that an informative name is
assigned, especially if \code{stansim} objects are to be combined in
to a \code{stansim_collection} object.}
}
\value{
An S3 object of class \code{stansim} recording relevant
simulation data.
}
\description{
\code{stan_sim} fits a specified stan model across multiple
datasets,  collates, and returns summary information and data for all
models as a \code{stansim} object. All fitted models will have basic
reproducability information recorded; such as parameter inits and seeds,
along with parameter estimates, and simulation info such as time and date
ran.

Raw stan posterior samples are not returned, rather the user specifies the
estimates they wish to record (e.g. posterior percentiles, Rhat, etc.)
and the parameters for which they wish to record these estimates.
All data is collated into a single long-format dataframe for further
analysis.

By default the function caches completed runs as it progresses, so that
progress is not lost in the case of function failure. When the function
terminates as expected this cache is removed.
}
